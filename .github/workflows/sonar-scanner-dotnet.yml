on:
  workflow_dispatch:
  # Trigger analysis when pushing to your main branches, and when creating a pull request.
  push:
    branches:
      - main
      - master
      - develop
      - 'releases/**'
    paths:
      - 'sonar-scanner-gradle/gradle-multimodule-coverage/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'sonar-scanner-gradle/gradle-multimodule-coverage/**'

name: SonarQube .NET Scanner
jobs:
  sonar-scanner-dotnet:
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: sonar-scanner-msbuild\CSharpProject\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: sonar-scanner-msbuild\CSharpProject\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        working-directory: sonar-scanner-msbuild\CSharpProject
        run: |
          New-Item -Path sonar-scanner-msbuild\CSharpProject\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: powershell
        working-directory: sonar-scanner-msbuild\CSharpProject
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"sonar-scanner-dotnet" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
